.flex {
  display: -webkit-box; 
  display: -moz-box; 
  display:-webkit-flex;
  display: -ms-flexbox;
  display:flex;
}

.flex-int(@fg: 1, @fs: 0, @fb: auto) {

  @fg-boxflex: @fg;

  -webkit-box: @fg-boxflex;
  -moz-box: @fg-boxflex;
  -webkit-flex: @fg @fs @fb;
  -ms-flex: @fg @fs @fb;
  flex: @fg @fs @fb;
}

.flex-direction(@direction) {
  -ms-flex-direction:@direction;
 -webkit-flex-direction:@direction;
  flex-direction:@direction;
}

.flexbox-shrink(@int: 0) {
  -webkit-flex-shrink: @int;
  -moz-flex-shrink: @int;
  -ms-flex: @int;
  flex-shrink: @int;
}

.flex-align-items(@value: stretch) {
  if(@value = 'flex-start') 
    -webkit-box-align: start;
    -moz-box-align: start;
    -ms-flex-align: start;
  

  if(@value = 'flex-end') 
    -webkit-box-align: end;
    -moz-box-align: end;
    -ms-flex-align: end;
  
  else {
    -webkit-box-align: @value;
    -moz-box-align: @value;
    -ms-flex-align: @value;
  }

  -webkit-align-items: @value;
  align-items: @value;
}

.justify-content(@value: flex-start) {
  if(@value = 'flex-start')
    -webkit-box-pack: start;
    -moz-box-pack: start;
    -ms-flex-pack: start;

  if(@value = 'flex-end') 
    -webkit-box-pack: end;
    -moz-box-pack: end;
    -ms-flex-pack: end;

  if(@value = 'space-between')
    -webkit-box-pack: justify;
    -moz-box-pack: justify;
    -ms-flex-pack: justify;

  if(@value = 'space-around')
    -ms-flex-pack: distribute;

  else {
    -webkit-box-pack: @value;
    -moz-box-pack: @value;
    -ms-flex-pack: @value;
  }
  -webkit-justify-content: @value;
  justify-content: @value;
}

.flex-row {
  .flex();
  .flex-direction(row);
  .flex-align-items(center);
}